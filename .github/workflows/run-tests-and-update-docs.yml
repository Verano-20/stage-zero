name: Run Tests and Update Docs

on:
  pull_request:
    branches:
      - main
      - deployment

env:
  GO_VERSION: '1.24'
  NODE_VERSION: '24'

jobs:
  # Job 1: Run application tests
  run-application-tests:
    name: Run Application Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run Go tests
        run: |
          go test -v -race -timeout=30s ./...

  # Job 2: Run Playwright E2E tests
  run-e2e-tests:
    name: Run Playwright E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        run: npx playwright test
        env:
          BASE_URL: http://localhost:8080

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/

      - name: Upload Playwright traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces
          path: test-results/

  # Job 3: Update Swagger Documentation
  update-docs:
    name: Update Swagger Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: [run-application-tests, run-e2e-tests]
    if: always() && (needs.run-application-tests.result == 'success' && needs.run-e2e-tests.result == 'success')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Swag
        run: go install github.com/swaggo/swag/cmd/swag@v1.16.6

      - name: Generate docs
        run: swag init -g cmd/api-server/main.go -o docs

      - name: Check for changes and commit
        run: |
          if git diff --quiet docs/; then
            echo "No doc changes needed"
            echo "## Swagger Documentation Update" >> $GITHUB_STEP_SUMMARY
            echo "✅ No documentation changes required" >> $GITHUB_STEP_SUMMARY
          else
            echo "Documentation updated - committing changes"
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            BRANCH_NAME=${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}
            echo "Working on branch: $BRANCH_NAME"
            
            git add docs/
            git commit -m "docs: auto-update Swagger documentation"
            
            git push origin HEAD:$BRANCH_NAME
            
            echo "## Swagger Documentation Update" >> $GITHUB_STEP_SUMMARY
            echo "✅ Documentation updated and committed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Changes:" >> $GITHUB_STEP_SUMMARY
            echo '```diff' >> $GITHUB_STEP_SUMMARY
            git diff HEAD~1 docs/ >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

  # Job 4: Integration test summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [run-application-tests, run-e2e-tests, update-docs]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.run-application-tests.result }}" == "success" ]; then
            echo "✅ **Run Application Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Run Application Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.run-e2e-tests.result }}" == "success" ]; then
            echo "✅ **Run Playwright E2E Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Run Playwright E2E Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.update-docs.result }}" == "success" ]; then
            echo "✅ **Update Swagger Documentation**: COMPLETED" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.update-docs.result }}" == "skipped" ]; then
            echo "⏭️ **Update Swagger Documentation**: SKIPPED (tests failed)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Update Swagger Documentation**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts Generated:" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright test report" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright traces (on failure)" >> $GITHUB_STEP_SUMMARY

