name: Run Tests For Release

on:
  pull_request:
    branches:
      - main
      - deployment

env:
  GO_VERSION: '1.24'
  NODE_VERSION: '24'

jobs:
  # Job 1: Build application and run tests
  go-build-and-test:
    name: Build and Run Application Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build application
        run: |
          go build -v -o bin/api-server ./cmd/api-server
          go build -v -o bin/migrate ./cmd/migrate

      - name: Run Go tests
        run: |
          go test -v ./...

  # Job 2: Run Playwright E2E tests
  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    needs: go-build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        run: npx playwright test
        env:
          BASE_URL: http://localhost:8080

      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/

      - name: Upload Playwright traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces
          path: test-results/

  # Job 3: Integration test summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [go-build-and-test, e2e-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.go-build-and-test.result }}" == "success" ]; then
            echo "✅ **Go Build & Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Go Build & Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "✅ **E2E Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **E2E Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts Generated:" >> $GITHUB_STEP_SUMMARY
          echo "- Go coverage report" >> $GITHUB_STEP_SUMMARY
          echo "- Go build binaries" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright test report" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright traces (on failure)" >> $GITHUB_STEP_SUMMARY

