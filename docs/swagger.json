{
    "swagger": "2.0",
    "info": {
        "description": "This is a CRUD API base application.",
        "title": "Stage-Zero API",
        "contact": {},
        "version": "1.0.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user with email and password credentials. Returns a JWT token upon successful authentication that can be used for subsequent API calls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and generate JWT token",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful, returns JWT token",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or validation failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during authentication",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new user with email and password. The email must be unique. The password must be at least 8 characters long.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/model.UserDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or validation failed",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during user creation",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get health of the server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get health",
                "responses": {
                    "200": {
                        "description": "Server is healthy and operational",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/simple": {
            "get": {
                "description": "Get all Simples. Returns an array of Simple objects. Returns an empty array if none exist.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Simple"
                ],
                "summary": "Get all Simples",
                "responses": {
                    "200": {
                        "description": "Simples retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error while retrieving Simples",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Simple with the provided details. The name field is required and must be a non-empty string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Simple"
                ],
                "summary": "Create a new Simple",
                "parameters": [
                    {
                        "description": "Simple details",
                        "name": "simple",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SimpleForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Simple created successfully",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during resource creation",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/simple/{id}": {
            "get": {
                "description": "Find a Simple by its unique ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Simple"
                ],
                "summary": "Get Simple by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Simple ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simple retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or value",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Simple not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a Simple identified by its ID with new data. The ID must exist and the request body must contain valid data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Simple"
                ],
                "summary": "Update an existing Simple",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Simple ID to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Simple details",
                        "name": "simple",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SimpleForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simple updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or request body format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Simple not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during update operation",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently delete a Simple identified by its ID. This operation cannot be undone.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Simple"
                ],
                "summary": "Delete a Simple",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Simple ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simple deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or value",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Simple not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during deletion",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.SimpleForm": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "My Simple"
                }
            }
        },
        "model.UserDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-01T00:00:00Z"
                }
            }
        },
        "model.UserForm": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 8,
                    "example": "securePassword123"
                }
            }
        },
        "response.ApiResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string",
                    "example": "An error occurred"
                }
            }
        }
    }
}